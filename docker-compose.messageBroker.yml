version: "3.8"
services:
    database:
      image: postgres:${POSTGRES_VERSION-13}
      container_name: postgres
      restart: always
      environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
      volumes:
        - ./database/Postgres/init:/docker-entrypoint-initdb.d
        # - ./database/Postgres/data:/var/lib/postgresql/data
      ports:
        - "5432:5432"

    adminer:
      image: adminer
      restart: always
      ports:
        - 8080:8080
  # # ===================>> message queue (Kafka) <<======================
    zoo1:
      image: zookeeper:latest
      container_name: nistagram_zookeeper
      hostname: ${ZOOKEEPER_HOSTNAME}
      restart: always
      ports:
        - "${ZOOKEEPER_PORT}:2181"
        - "${ZOOKEEPER_PORT_ADMIN}:8080"
      # volumes:
        # - ${ZOOKEEPER_PATH}/data:/data
        # - ${ZOOKEEPER_PATH}/datalog:/datalog


    kafka1:
      image: confluentinc/cp-kafka:latest
      container_name: nistagram_kafka1
      hostname: ${KAFKA_HOSTNAME}
      ports:
        - "${KAFKA_PORT}:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: "${ZOOKEEPER_HOSTNAME}:2181"
        KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-localhost}:${KAFKA_PORT}
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      # volumes:
        # -  ${KAFKA_VOLUME_PATH}:/var/lib/kafka/data
      depends_on:
        - zoo1

